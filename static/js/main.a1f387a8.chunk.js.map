{"version":3,"sources":["Views/HomeView.jsx","Components/AuthorBooks.jsx","Views/AuthorsView/AuthorsViewClasses.jsx","Views/BooksView/BooksViewClasses.jsx","Views/NotFoundView.jsx","Views/BookDetailsView.jsx","App.js","index.js"],"names":["HomeView","AuthorBooks","state","Component","AuthorsView","authors","a","Axios","get","repsonse","this","setState","data","props","match","url","path","map","name","id","to","render","BooksView","books","title","NotFoundView","BookDetailsView","descr","genre","imgUrl","bookId","params","axios","response","src","alt","App","exact","className","activeClassName","component","NotFoundViews","ReactDOM","StrictMode","document","getElementById"],"mappings":"2MAIeA,EAJE,WACf,OAAO,gD,gECQMC,E,4MANbC,MAAQ,G,4CACR,WACE,OAAO,gK,GAHeC,a,iBC4CXC,E,4MAvCbF,MAAQ,CACNG,QAAS,I,8FAGX,4BAAAC,EAAA,sEAEyBC,IAAMC,IAC3B,8CAHJ,OAEQC,EAFR,OAKEC,KAAKC,SAAS,CACZN,QAASI,EAASG,OANtB,gD,0EAUA,WAAU,IACAP,EAAYK,KAAKR,MAAjBG,QADD,EAEeK,KAAKG,MAAMC,MAAzBC,EAFD,EAECA,IAAKC,EAFN,EAEMA,KAEb,OACE,qCACE,uCACA,6BACGX,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OACX,6BACE,cAAC,IAAD,CAASC,GAAE,UAAKL,EAAL,YAAYI,GAAvB,SAA8BD,KADvBC,QAKb,cAAC,IAAD,CACEH,KAAI,UAAKA,EAAL,cACJK,OAAQ,SAAAR,GACN,OAAO,cAAC,EAAD,2BAAiBA,GAAjB,IAAwBR,QAASA,e,GAhC1BF,aC2BXmB,E,4MA5BbpB,MAAQ,CACNqB,MAAO,I,8FAGT,4BAAAjB,EAAA,sEACyBC,IAAMC,IAAI,gCADnC,OACQC,EADR,OAEEC,KAAKC,SAAS,CACZY,MAAOd,EAASG,OAHpB,gD,0EAOA,WAAU,IAAD,OACCW,EAAUb,KAAKR,MAAfqB,MAER,OACE,mCACE,6BACGA,EAAMN,KAAI,gBAAGO,EAAH,EAAGA,MAAOL,EAAV,EAAUA,GAAV,OACT,6BACE,cAAC,IAAD,CAAMC,GAAE,UAAK,EAAKP,MAAMC,MAAMC,IAAtB,YAA6BI,GAArC,SAA4CK,KADrCL,c,GAnBGhB,aCATsB,EAJM,WACnB,OAAO,2ICwCMC,E,4MAnCbxB,MAAQ,CACNyB,MAAO,KACPC,MAAO,KACPT,GAAI,KACJU,OAAQ,KACRL,MAAO,M,8FAGT,8BAAAlB,EAAA,6DAEUwB,EAAWpB,KAAKG,MAAMC,MAAMiB,OAA5BD,OAFV,SAKyBE,IAAMxB,IAAN,sCAAyCsB,IALlE,OAKQG,EALR,OAQEvB,KAAKC,SAAL,eAAmBsB,EAASrB,OAR9B,gD,0EAWA,WAAS,MAEiCF,KAAKR,MAArCsB,EAFD,EAECA,MAAOG,EAFR,EAEQA,MAAOC,EAFf,EAEeA,MAAOC,EAFtB,EAEsBA,OAE7B,OAEE,cADA,CACA,sBACE,mHAAqBL,KACrB,2DAAUI,KACV,mFAAcD,KACd,qBAAKO,IAAKL,EAAQM,IAAKX,W,GAhCDrB,a,MCoDfiC,MA9Cf,WACE,OACE,gCACE,+BACE,6BACE,cAAC,IAAD,CACEhB,GAAG,IACHiB,OAAK,EACLC,UAAU,UACVC,gBAAgB,kBAJlB,wBASF,6BACE,cAAC,IAAD,CACEnB,GAAG,WACHkB,UAAU,UACVC,gBAAgB,kBAHlB,uBAQF,6BACE,cAAC,IAAD,CACEnB,GAAG,SACHkB,UAAU,UACVC,gBAAgB,kBAHlB,wBAUJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOF,OAAK,EAACrB,KAAK,IAAIwB,UAAWxC,IACjC,cAAC,IAAD,CAAOgB,KAAK,WAAWwB,UAAWpC,IAClC,cAAC,IAAD,CAAOY,KAAK,iBAAiBwB,UAAWd,IACxC,cAAC,IAAD,CAAOW,OAAK,EAACrB,KAAK,SAASwB,UAAWlB,IAEtC,cAAC,IAAD,CAAOkB,UAAWC,W,MC1C1BC,IAASrB,OACP,cAAC,IAAMsB,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.a1f387a8.chunk.js","sourcesContent":["const HomeView = () => {\n  return <h1>This homepage</h1>;\n};\n\nexport default HomeView;\n","import { Component } from 'react';\r\n\r\nclass AuthorBooks extends Component {\r\n  state = {};\r\n  render() {\r\n    return <h1>Компонент книги автора</h1>;\r\n  }\r\n}\r\n\r\nexport default AuthorBooks;\r\n","import AuthorBooks from '../../Components/AuthorBooks';\r\n\r\nimport { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport { NavLink, Route } from 'react-router-dom';\r\n\r\nclass AuthorsView extends Component {\r\n  state = {\r\n    authors: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    //*Сразу же забираем с сервера не только авторов, но и книги, чтобы после передать их пропсом в AuthorBooks\r\n    const repsonse = await Axios.get(\r\n      'http://localhost:4040/authors?_embed=books',\r\n    );\r\n    this.setState({\r\n      authors: repsonse.data,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { authors } = this.state;\r\n    const { url, path } = this.props.match;\r\n\r\n    return (\r\n      <>\r\n        <h1>Books</h1>\r\n        <ul>\r\n          {authors.map(({ name, id }) => (\r\n            <li key={id}>\r\n              <NavLink to={`${url}/${id}`}>{name}</NavLink>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <Route\r\n          path={`${path}/:authorId`}\r\n          render={props => {\r\n            return <AuthorBooks {...props} authors={authors} />;\r\n          }}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AuthorsView;\r\n","import { Component } from 'react';\r\nimport Axios from 'axios';\r\nimport { Link, Route } from 'react-router-dom';\r\n\r\nclass BooksView extends Component {\r\n  state = {\r\n    books: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const repsonse = await Axios.get('http://localhost:4040/books/');\r\n    this.setState({\r\n      books: repsonse.data,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { books } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <ul>\r\n          {books.map(({ title, id }) => (\r\n            <li key={id}>\r\n              <Link to={`${this.props.match.url}/${id}`}>{title}</Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksView;\r\n","const NotFoundView = () => {\n  return <h1>Страница не найдена</h1>;\n};\n\nexport default NotFoundView;\n","import { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass BookDetailsView extends Component {\r\n  // *Храним в стейте не целый объект book, а отдельные свойства\r\n\r\n  state = {\r\n    descr: null,\r\n    genre: null,\r\n    id: null,\r\n    imgUrl: null,\r\n    title: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // *Вытягиваем динамический параметр (id)\r\n    const { bookId } = this.props.match.params;\r\n\r\n    // *Создаем запрос на сервер\r\n    const response = await axios.get(`http://localhost:4040/books/${bookId}`);\r\n\r\n    // *Распыляем полученные данные в стейт\r\n    this.setState({ ...response.data });\r\n  }\r\n\r\n  render() {\r\n    //   * Деструктуризируем стейт\r\n    const { title, descr, genre, imgUrl } = this.state;\r\n\r\n    return (\r\n      // * Рендерим результат\r\n      <>\r\n        <h1>Название книги: {title}</h1>\r\n        <p>Жанр: {genre}</p>\r\n        <p>Описание: {descr}</p>\r\n        <img src={imgUrl} alt={title} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookDetailsView;\r\n","import { Route, NavLink, Switch } from 'react-router-dom';\nimport HomeView from './Views/HomeView';\nimport AuthorsView from './Views/AuthorsView/AuthorsViewClasses';\nimport BooksView from './Views/BooksView/BooksViewClasses';\nimport NotFoundViews from './Views/NotFoundView';\nimport BookDetailsView from './Views/BookDetailsView';\n\nimport './base.scss';\n\nfunction App() {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <NavLink\n            to=\"/\"\n            exact\n            className=\"NavLink\"\n            activeClassName=\"NavLink--active\"\n          >\n            Homepage\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"/authors\"\n            className=\"NavLink\"\n            activeClassName=\"NavLink--active\"\n          >\n            Authors\n          </NavLink>\n        </li>\n        <li>\n          <NavLink\n            to=\"/books\"\n            className=\"NavLink\"\n            activeClassName=\"NavLink--active\"\n          >\n            Books\n          </NavLink>\n        </li>\n      </ul>\n\n      <Switch>\n        <Route exact path=\"/\" component={HomeView} />\n        <Route path=\"/authors\" component={AuthorsView} />\n        <Route path=\"/books/:bookId\" component={BookDetailsView} />\n        <Route exact path=\"/books\" component={BooksView} />\n\n        <Route component={NotFoundViews} />\n      </Switch>\n    </nav>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}